The following changes of CADP may have impacted the generated LNT code: #2948, #2951.
Each CADP change is referenced below, with the modifications performed (DONE, UNKNOWN, NOTHING TO DO).
By convention, CADP items are represented with ``----'', while sub-items (such as TRAIAN ones) are
represented with ``####''.

-------------------#2948: NOTHING TO DO-------------------

IMPROVEMENT
Number:		2948
Date:		Thu Dec 21 11:33:37 CET 2023
Report:		Frederic Lang (INRIA/CONVECS)
Author:		Hubert Garavel (INRIA/CONVECS)
Files:		lib/LNT_V1.h, demos/demo_08/interface.lnt,
		demos/demo_08/PORT.lnt, demos/demo_08/rel_rel_C.lnt

Nature:		To align LNT2LOTOS with TRAIAN, the predefined library
		"LNT_V1" of LNT2LOTOS was extended with new functions FIRST
		and LAST for the predefined types BOOL and CHAR.

		In a few cases, this change may cause incompatibilities in
		existing LNT specifications that already contain FIRST and/or
		LAST functions. This was the case with some LNT files of
		demo_08, where a function FIRST : -> TYPEMSG was defined,
		making it impossible to CAESAR.ADT to resolve overloading
		in the generated LOTOS code. This problem was easily solved
		by replacing "FIRST" with "FIRST of TYPEMSG" where needed.

-------------------#2951: NOTHING TO DO-------------------

IMPROVEMENT
Number:		2951
Date:		Sat Dec 30 10:50:25 CET 2023
Authors:	Hubert Garavel, Frederic Lang, and Wendelin Serwe (INRIA/
		CONVECS)
Files:		bin.*/traian, demos/demo_11/TYPES.lnt, demos/demo_23/DATA.lnt,
		demos/demo_26/DATAP.lnt, demos/demo_32/ELEM_E12_SAMEADDR_I.lnt,
		demos/demo_32/ELEM_E12_4P.lnt, demos/demo_32/ELEM_E12_I.lnt,
		demos/demo_29/DATA.lnt, demos/demo_32/ELEM_E1_I.lnt,
		demos/demo_32/ELEM_E1_J.lnt, demos/demo_38/BIT_ABSTRACT.lnt,
		demos/demo_38/BIT_CONCRETE.lnt

Nature:		The TRAIAN compiler included in the CADP release has been
		upgraded from version 3.11 to 3.12. Among the 51 changes
		brought by TRAIAN 3.12 and listed on the web page
		   http://vasy.inria.fr/traian/traian_3_12.html
		one third of them directly concerns the users of CADP, namely:
		   items 556, 570, 571, 572, 573, 577, 579, 580, 581, 582,
		   583, 584, 585, 593, 594, and 596.

		Among them, five changes are not backward compatible, possibly
		requiring manual changes in existing LNT programs to keep
		them accepted by the CADP tools:

		- item 582: renaming of NAT constructor "ZERO" to "0".
		- item 584: insertion of "with get" to use field projections.
		- item 585: insertion of "with set" to use field updates.
		- item 593: insertion of "with ==", "with !=", "with <", etc.
		- item 596: insertion of "with string".

		Consequently, the demos 11, 23, 26, 29, 32, and 38 have been
		updated by inserting a few clauses "with =", "with !=", or
		"with <>" where appropriate.

		Also, the script "$CADP/com/traian_delete" (see item #2915
		above) has been removed, since TRAIAN 3.12 now uses the CADP
		script "$CADP/src/com/cadp_delete".

############ITEM 582: NOTHING TO DO############

To further align TRAIAN with LNT2LOTOS, the constructor ZERO of type Nat defined
in the file "lotosnt_predefined.lnt" was renamed to "0".

This change is not backward compatible, as all occurrences of ZERO should be replaced by "0".
Notice, however, that the name ZERO was not officially documented in the reference manuals of
TRAIAN and LNT2LOTOS.

Besides increasing compatibility between LNT2LOTOS and TRAIAN, this change enables a more
precise analysis of patterns. For instance, given the following definition:

   function F (N : NAT) : BOOL is
      case N in
         0 -> return false
      |  SUCC (any) -> return true
      end case
   end function

TRAIAN no longer emits the following (spurious) warning:

   possibly incomplete patterns in "case" instruction
   some values of type NAT, namely those of the following form:
      ZERO
   might not be matched by the given constants (an "any"
   pattern might be necessary to match the missing cases)

Also, given the following definition:

   function G (N : NAT) : BOOL is
      case N in
	 0 -> return false
      |  2 -> return true
      end case
   end function

TRAIAN 3.12 now emits a more informative warning:

   possibly incomplete patterns in "case" instruction
   some values of type NAT, namely those of the following form:
      SUCC (X : NAT)
   might not be matched by the given constants

See item 582 in the HISTORY.txt file.

############ITEM 584: NOTHING TO DO############

The static semantics of TRAIAN was modified to make it as strict as LNT2LOTOS: from now
on, any expression of the following form:

   V.X

or

   V .[E] X

is rejected if the type of the expression is declared without a "with get" clause. In
such case, TRAIAN now emits the following error message:

   type T lacks "with get" to enable field accesses

This change is not backward compatible, as it may be required to introduce "with get"
clauses in existing LOTOS NT programs to have them accepted by TRAIAN 3.12.

For instance, the two files "demos/demo_03/scsi.lnt" and "demos/demo_04/simproc.lnt"
have been modified to insert "with get" clauses where needed. See item 584 in the
HISTORY.txt file. 

############ITEM 585: NOTHING TO DO############

The static semantics of TRAIAN was modified to make it as strict as LNT2LOTOS: from
now on, any expression of the form:

   V.{X1->V1, ..., Xn->Vn}

or:

   V .[E] {X1->V1, ..., Xn->Vn}

is rejected if the type of the expression is declared without a "with set" clause.
In such case, TRAIAN now emits the following error message:

   type T lacks "with set" to enable field updates

This change is not backward compatible, as it may be required to introduce "with set"
clauses in existing LOTOS NT programs to have them accepted by TRAIAN 3.12. See item
585 in the HISTORY.txt file.

############ITEM 593: NOTHING TO DO############

The static semantic checks of TRAIAN have been strengthened as follows: if some type
T2 defined by the list of its constructors has a clause "with ==" (resp. "!=", "<",
"<=", etc.), then each type T1 used by (at least) one parameter of a constructor of
T2 must also have a function "==" (resp. "!=", "<", "<=", etc.), which can be defined
either explicitly, or implicitly using another "with" clause. If not, TRAIAN 3.12 will
issue an error message of the form:

   type T1 lacks function "==" needed by "==" for type T2
   type T1 lacks function "<" needed by "<" for type T2
   etc.

In such case, TRAIAN 3.11 generated C code that did not compile properly, as it
contained references to undefined comparison functions, causing warnings from the C
compiler:

   warning: implicit function declaration: TRAIAN_EQ_T1

This change is healthy, but may require to manually update existing LOTOS NT programs
to insert missing "with ==", etc. clauses. For instance, file
"demos/demo_01/DATA_IEEE_1394.lnt" was modified accordingly. See item 593 in the
HISTORY.txt file.

############ITEM 596: NOTHING TO DO############

The static semantics of TRAIAN has been strengthened: if a type T2 defined by the
list of its constructors has a clause "with STRING", then each type T1 used by (at
least one) parameter of some constructor of T2 must also have a STRING : T1 â†’ STRING
function. This function may be defined either explicitly or implicitly (using another
"with STRING" clause). If not, TRAIAN will now report the following error:

   type T1 lacks function "string" needed by "string" for type T2

See item 596 in the HISTORY.txt file.
