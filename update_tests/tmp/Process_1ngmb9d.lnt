module Process_1ngmb9d(bpmntypes) with get, ==, < is

process init [begin:any, outf:any] is
 var ident: ID in begin ; outf (?ident of ID) end var 
end process

process final [incf:any, finish:any] is
var ident: ID in 
loop 
incf (?ident of ID); finish 
end loop
end var
end process

process flow [begin:any, finish:any] (ident: ID) is
 loop begin (ident) ; finish (ident) end loop
end process

process task_1_1 [incf:any,task:any,outf:any] is
 var ident: ID in loop  incf (?ident of ID); task ;  outf (?ident of ID) end loop end var
end process

process xorjoin_Gateway_0hcn4ks [incf_1:any,incf_2:any,outf:any] is 
 var ident: ID in loop select incf_1 (?ident of ID)[]incf_2 (?ident of ID) end select ; outf (?ident of ID) end loop end var 
end process

process xorsplit_Gateway_0dwla2i [incf:any,outf_1:any,outf_2:any ] is 
 var ident: ID in loop incf (?ident of ID); 
 select outf_1(?ident of ID)[]outf_2(?ident of ID) end select end loop end var
end process

process xorsplit_Gateway_1has10j [incf:any,outf_1:any,outf_2:any ] is 
 var ident: ID in loop incf (?ident of ID); 
 select outf_1(?ident of ID)[]outf_2(?ident of ID) end select end loop end var
end process

process andsplit_Gateway_07mdljq [incf:any,outf_1:any,outf_2:any ] is 
 var ident2:ID,ident1:ID in  var ident: ID in loop incf (?ident of ID); 
 par outf_1(?ident2 of ID)||outf_2(?ident1 of ID) end par end loop end var end var
end process

process andjoin_Gateway_1kcljo2 [incf_1:any,incf_2:any,outf:any] is 
 var ident2:ID,ident1:ID in  var ident:ID in loop par incf_1 (?ident2 of ID)||incf_2 (?ident1 of ID) end par ; outf (?ident of ID) end loop end var end var 
end process

process xorjoin_Gateway_1hvgstf [incf_1:any,incf_2:any,outf:any] is 
 var ident: ID in loop select incf_1 (?ident of ID)[]incf_2 (?ident of ID) end select ; outf (?ident of ID) end loop end var 
end process


process scheduler [Flow_0l7vqr5_begin:any, Flow_0l7vqr5_finish:any, Flow_0260g19_begin:any, Flow_0260g19_finish:any, Flow_1hsfrxd_begin:any, Flow_1hsfrxd_finish:any, Flow_1gg6kme_begin:any, Flow_1gg6kme_finish:any, Flow_0g18kjw_begin:any, Flow_0g18kjw_finish:any, Flow_0ex5np0_begin:any, Flow_0ex5np0_finish:any, Flow_0aeyc3e_begin:any, Flow_0aeyc3e_finish:any, Flow_1lpe857_begin:any, Flow_1lpe857_finish:any, Flow_1n4p5ca_begin:any, Flow_1n4p5ca_finish:any, Flow_14exuww_begin:any, Flow_14exuww_finish:any, Flow_0n5cl5u_begin:any, Flow_0n5cl5u_finish:any, Flow_1os3poj_begin:any, Flow_1os3poj_finish:any, Flow_07jb1wz_begin:any, Flow_07jb1wz_finish:any, Flow_0jo1ts2_begin:any, Flow_0jo1ts2_finish:any, Flow_0p066qq_begin:any, Flow_0p066qq_finish:any, Flow_0hi86xu_begin:any, Flow_0hi86xu_finish:any, Flow_0s8akvo_begin:any, Flow_0s8akvo_finish:any, Flow_16ekjt0_begin:any, Flow_16ekjt0_finish:any, Flow_1uairna_begin:any, Flow_1uairna_finish:any, MoveOn:any] (activeflows: IDS, bpmn: BPROCESS, syncstore: IDS, mergestore:IDS, parstore:IDS) is
var ident: ID,ident3: ID,ident2: ID,ident1: ID, mergeid: ID in 
select 
(*---------- Initial node ---------------------*)
Flow_0l7vqr5_begin (?ident1 of ID);scheduler [...](union({ident1}, remove_ids_from_set({}, activeflows)), bpmn, syncstore, mergestore, parstore)

[]

(*----  Task with ID: Activity_1kwh79w------*)
Flow_0l7vqr5_finish (?ident1 of ID); Flow_0260g19_begin (?ident2 of ID);scheduler [...](union({ident2}, remove_ids_from_set({ident1}, activeflows)), bpmn, syncstore, mergestore, parstore)

[]
(*----  XOrJoinGateway with ID: Gateway_0hcn4ks------*)
 select
Flow_0260g19_finish (?ident2 of ID) 
[]
Flow_0ex5np0_finish (?ident2 of ID) 
end select; Flow_1hsfrxd_begin (?ident1 of ID);scheduler [...](union({ident1}, remove_ids_from_set({ident2}, activeflows)), bpmn, syncstore, mergestore, parstore)

[]
(*----  Task with ID: Activity_0zada8u------*)
Flow_1hsfrxd_finish (?ident1 of ID); Flow_1gg6kme_begin (?ident2 of ID);scheduler [...](union({ident2}, remove_ids_from_set({ident1}, activeflows)), bpmn, syncstore, mergestore, parstore)

[]
(*----  Task with ID: Activity_1k1z0h2------*)
Flow_1gg6kme_finish (?ident1 of ID); Flow_0g18kjw_begin (?ident2 of ID);scheduler [...](union({ident2}, remove_ids_from_set({ident1}, activeflows)), bpmn, syncstore, mergestore, parstore)

[]
(*----  XOrSplitGateway with ID: Gateway_0dwla2i------*)
Flow_0g18kjw_finish (?ident1 of ID);  select
Flow_0ex5np0_begin (?ident2 of ID); scheduler [...](union({ident2}, remove_ids_from_set({ident1}, activeflows)), bpmn, syncstore, mergestore, parstore)
[]
Flow_0aeyc3e_begin (?ident3 of ID); scheduler [...](union({ident3}, remove_ids_from_set({ident1}, activeflows)), bpmn, syncstore, mergestore, parstore)

end select 
[]
(*----  Task with ID: Activity_1ihs2pn------*)
Flow_0aeyc3e_finish (?ident1 of ID); Flow_1lpe857_begin (?ident2 of ID);scheduler [...](union({ident2}, remove_ids_from_set({ident1}, activeflows)), bpmn, syncstore, mergestore, parstore)

[]
(*----  XOrSplitGateway with ID: Gateway_1has10j------*)
Flow_1lpe857_finish (?ident1 of ID);  select
Flow_1n4p5ca_begin (?ident2 of ID); scheduler [...](union({ident2}, remove_ids_from_set({ident1}, activeflows)), bpmn, syncstore, mergestore, parstore)
[]
Flow_14exuww_begin (?ident3 of ID); scheduler [...](union({ident3}, remove_ids_from_set({ident1}, activeflows)), bpmn, syncstore, mergestore, parstore)

end select 
[]
(*----  Task with ID: Activity_1nznv0p------*)
Flow_1n4p5ca_finish (?ident1 of ID); Flow_16ekjt0_begin (?ident2 of ID);scheduler [...](union({ident2}, remove_ids_from_set({ident1}, activeflows)), bpmn, syncstore, mergestore, parstore)

[]
(*----  Task with ID: Activity_1yint2p------*)
Flow_14exuww_finish (?ident1 of ID); Flow_0n5cl5u_begin (?ident2 of ID);scheduler [...](union({ident2}, remove_ids_from_set({ident1}, activeflows)), bpmn, syncstore, mergestore, parstore)

[]
(*----  AndSplitGateway with ID: Gateway_07mdljq------*)
Flow_0n5cl5u_finish (?ident1 of ID);par
Flow_1os3poj_begin (?ident2 of ID) 
||Flow_07jb1wz_begin (?ident3 of ID) 
end par;scheduler [...](union({ident2,ident3}, remove_ids_from_set({ident1}, activeflows)), bpmn, syncstore, mergestore, parstore)

[]
(*----  Task with ID: Activity_0qskknw------*)
Flow_1os3poj_finish (?ident1 of ID); Flow_0jo1ts2_begin (?ident2 of ID);scheduler [...](union({ident2}, remove_ids_from_set({ident1}, activeflows)), bpmn, syncstore, mergestore, parstore)

[]
(*----  Task with ID: Activity_09wb4yp------*)
Flow_07jb1wz_finish (?ident1 of ID); Flow_0p066qq_begin (?ident2 of ID);scheduler [...](union({ident2}, remove_ids_from_set({ident1}, activeflows)), bpmn, syncstore, mergestore, parstore)

[]
(*----  AndJoinGateway with ID: Gateway_1kcljo2------*)
Flow_0jo1ts2_finish (?ident of ID); scheduler [...](union({}, remove_ids_from_set({}, activeflows)), bpmn, insert(ident, syncstore), mergestore, insert(Gateway_1kcljo2, parstore))

[]
Flow_0p066qq_finish (?ident of ID); scheduler [...](union({}, remove_ids_from_set({}, activeflows)), bpmn, insert(ident, syncstore), mergestore, insert(Gateway_1kcljo2, parstore))

[]
(*----  Task with ID: Activity_1u1z1yw------*)
Flow_0hi86xu_finish (?ident1 of ID); Flow_0s8akvo_begin (?ident2 of ID);scheduler [...](union({ident2}, remove_ids_from_set({ident1}, activeflows)), bpmn, syncstore, mergestore, parstore)

[]
(*----  XOrJoinGateway with ID: Gateway_1hvgstf------*)
 select
Flow_0s8akvo_finish (?ident2 of ID) 
[]
Flow_16ekjt0_finish (?ident2 of ID) 
end select; Flow_1uairna_begin (?ident1 of ID);scheduler [...](union({ident1}, remove_ids_from_set({ident2}, activeflows)), bpmn, syncstore, mergestore, parstore)

[]

(*----------------- Final node ----------------------*)
Flow_1uairna_finish (?ident1 of ID);scheduler [...](union({}, remove_ids_from_set({ident1}, activeflows)), bpmn, syncstore, mergestore, parstore)

[]
 mergeid := any ID where member(mergeid, mergestore);
if (is_merge_possible_v2(bpmn,activeflows,mergeid) and is_sync_done(bpmn, activeflows, syncstore, mergeid)) then 
MoveOn(mergeid);scheduler [...](union({}, remove_ids_from_set({}, activeflows)), bpmn, syncstore, mergestore, parstore)
else 

scheduler [Flow_0l7vqr5_begin, Flow_0l7vqr5_finish, Flow_0260g19_begin, Flow_0260g19_finish, Flow_1hsfrxd_begin, Flow_1hsfrxd_finish, Flow_1gg6kme_begin, Flow_1gg6kme_finish, Flow_0g18kjw_begin, Flow_0g18kjw_finish, Flow_0ex5np0_begin, Flow_0ex5np0_finish, Flow_0aeyc3e_begin, Flow_0aeyc3e_finish, Flow_1lpe857_begin, Flow_1lpe857_finish, Flow_1n4p5ca_begin, Flow_1n4p5ca_finish, Flow_14exuww_begin, Flow_14exuww_finish, Flow_0n5cl5u_begin, Flow_0n5cl5u_finish, Flow_1os3poj_begin, Flow_1os3poj_finish, Flow_07jb1wz_begin, Flow_07jb1wz_finish, Flow_0jo1ts2_begin, Flow_0jo1ts2_finish, Flow_0p066qq_begin, Flow_0p066qq_finish, Flow_0hi86xu_begin, Flow_0hi86xu_finish, Flow_0s8akvo_begin, Flow_0s8akvo_finish, Flow_16ekjt0_begin, Flow_16ekjt0_finish, Flow_1uairna_begin, Flow_1uairna_finish, MoveOn] (activeflows, bpmn, syncstore, mergestore, parstore)
end if

[]
 mergeid := any ID where member(mergeid, parstore);
if (is_merge_possible_par(bpmn,syncstore,mergeid)) then 
select 
Flow_0hi86xu_begin (?ident1 of ID);scheduler [Flow_0l7vqr5_begin, Flow_0l7vqr5_finish, Flow_0260g19_begin, Flow_0260g19_finish, Flow_1hsfrxd_begin, Flow_1hsfrxd_finish, Flow_1gg6kme_begin, Flow_1gg6kme_finish, Flow_0g18kjw_begin, Flow_0g18kjw_finish, Flow_0ex5np0_begin, Flow_0ex5np0_finish, Flow_0aeyc3e_begin, Flow_0aeyc3e_finish, Flow_1lpe857_begin, Flow_1lpe857_finish, Flow_1n4p5ca_begin, Flow_1n4p5ca_finish, Flow_14exuww_begin, Flow_14exuww_finish, Flow_0n5cl5u_begin, Flow_0n5cl5u_finish, Flow_1os3poj_begin, Flow_1os3poj_finish, Flow_07jb1wz_begin, Flow_07jb1wz_finish, Flow_0jo1ts2_begin, Flow_0jo1ts2_finish, Flow_0p066qq_begin, Flow_0p066qq_finish, Flow_0hi86xu_begin, Flow_0hi86xu_finish, Flow_0s8akvo_begin, Flow_0s8akvo_finish, Flow_16ekjt0_begin, Flow_16ekjt0_finish, Flow_1uairna_begin, Flow_1uairna_finish, MoveOn](union({ident1}, remove_incf(bpmn, activeflows, mergeid)), bpmn, remove_sync(bpmn, syncstore, mergeid), mergestore, remove(mergeid, parstore))
end select 
else 

scheduler [Flow_0l7vqr5_begin, Flow_0l7vqr5_finish, Flow_0260g19_begin, Flow_0260g19_finish, Flow_1hsfrxd_begin, Flow_1hsfrxd_finish, Flow_1gg6kme_begin, Flow_1gg6kme_finish, Flow_0g18kjw_begin, Flow_0g18kjw_finish, Flow_0ex5np0_begin, Flow_0ex5np0_finish, Flow_0aeyc3e_begin, Flow_0aeyc3e_finish, Flow_1lpe857_begin, Flow_1lpe857_finish, Flow_1n4p5ca_begin, Flow_1n4p5ca_finish, Flow_14exuww_begin, Flow_14exuww_finish, Flow_0n5cl5u_begin, Flow_0n5cl5u_finish, Flow_1os3poj_begin, Flow_1os3poj_finish, Flow_07jb1wz_begin, Flow_07jb1wz_finish, Flow_0jo1ts2_begin, Flow_0jo1ts2_finish, Flow_0p066qq_begin, Flow_0p066qq_finish, Flow_0hi86xu_begin, Flow_0hi86xu_finish, Flow_0s8akvo_begin, Flow_0s8akvo_finish, Flow_16ekjt0_begin, Flow_16ekjt0_finish, Flow_1uairna_begin, Flow_1uairna_finish, MoveOn] (activeflows, bpmn, syncstore, mergestore, parstore)
end if
end select
end var
end process


function p1(): BPROCESS is 

 return proc ( 
Process_1ngmb9d,
{
	i ( initial(StartEvent_0acp81e,Flow_0l7vqr5) ),
	f ( { final(Event_1abl74h,{Flow_1uairna}) } ),
	t ( { task(Activity_1kwh79w,{Flow_0l7vqr5},{Flow_0260g19}),task(Activity_0zada8u,{Flow_1hsfrxd},{Flow_1gg6kme}),task(Activity_1k1z0h2,{Flow_1gg6kme},{Flow_0g18kjw}),task(Activity_1ihs2pn,{Flow_0aeyc3e},{Flow_1lpe857}),task(Activity_1nznv0p,{Flow_1n4p5ca},{Flow_16ekjt0}),task(Activity_1yint2p,{Flow_14exuww},{Flow_0n5cl5u}),task(Activity_0qskknw,{Flow_1os3poj},{Flow_0jo1ts2}),task(Activity_09wb4yp,{Flow_07jb1wz},{Flow_0p066qq}),task(Activity_1u1z1yw,{Flow_0hi86xu},{Flow_0s8akvo}) } ), 
	g ( { gateway(Gateway_0hcn4ks,merge,xor,{Flow_0260g19,Flow_0ex5np0},{Flow_1hsfrxd}),gateway(Gateway_0dwla2i,split,xor,{Flow_0g18kjw},{Flow_0ex5np0,Flow_0aeyc3e}),gateway(Gateway_1has10j,split,xor,{Flow_1lpe857},{Flow_1n4p5ca,Flow_14exuww}),gateway(Gateway_07mdljq,split,and,{Flow_0n5cl5u},{Flow_1os3poj,Flow_07jb1wz}),gateway(Gateway_1kcljo2,merge,and,{Flow_0jo1ts2,Flow_0p066qq},{Flow_0hi86xu}),gateway(Gateway_1hvgstf,merge,xor,{Flow_0s8akvo,Flow_16ekjt0},{Flow_1uairna}) } )
},
{ 
flow(Flow_0l7vqr5,StartEvent_0acp81e,Activity_1kwh79w),flow(Flow_0260g19,Activity_1kwh79w,Gateway_0hcn4ks),flow(Flow_1hsfrxd,Gateway_0hcn4ks,Activity_0zada8u),flow(Flow_1gg6kme,Activity_0zada8u,Activity_1k1z0h2),flow(Flow_0g18kjw,Activity_1k1z0h2,Gateway_0dwla2i),flow(Flow_0ex5np0,Gateway_0dwla2i,Gateway_0hcn4ks),flow(Flow_0aeyc3e,Gateway_0dwla2i,Activity_1ihs2pn),flow(Flow_1lpe857,Activity_1ihs2pn,Gateway_1has10j),flow(Flow_1n4p5ca,Gateway_1has10j,Activity_1nznv0p),flow(Flow_14exuww,Gateway_1has10j,Activity_1yint2p),flow(Flow_0n5cl5u,Activity_1yint2p,Gateway_07mdljq),flow(Flow_1os3poj,Gateway_07mdljq,Activity_0qskknw),flow(Flow_07jb1wz,Gateway_07mdljq,Activity_09wb4yp),flow(Flow_0jo1ts2,Activity_0qskknw,Gateway_1kcljo2),flow(Flow_0p066qq,Activity_09wb4yp,Gateway_1kcljo2),flow(Flow_0hi86xu,Gateway_1kcljo2,Activity_1u1z1yw),flow(Flow_0s8akvo,Activity_1u1z1yw,Gateway_1hvgstf),flow(Flow_16ekjt0,Activity_1nznv0p,Gateway_1hvgstf),flow(Flow_1uairna,Gateway_1hvgstf,Event_1abl74h)
}
)
end function


process MAIN [Activity_1kwh79w:any, Activity_0zada8u:any, Activity_1k1z0h2:any, Activity_1ihs2pn:any, Activity_1nznv0p:any, Activity_1yint2p:any, Activity_0qskknw:any, Activity_09wb4yp:any, Activity_1u1z1yw:any] is

 hide begin:any, finish:any, Flow_0l7vqr5_begin:any, Flow_0l7vqr5_finish:any, Flow_0260g19_begin:any, Flow_0260g19_finish:any, Flow_1hsfrxd_begin:any, Flow_1hsfrxd_finish:any, Flow_1gg6kme_begin:any, Flow_1gg6kme_finish:any, Flow_0g18kjw_begin:any, Flow_0g18kjw_finish:any, Flow_0ex5np0_begin:any, Flow_0ex5np0_finish:any, Flow_0aeyc3e_begin:any, Flow_0aeyc3e_finish:any, Flow_1lpe857_begin:any, Flow_1lpe857_finish:any, Flow_1n4p5ca_begin:any, Flow_1n4p5ca_finish:any, Flow_14exuww_begin:any, Flow_14exuww_finish:any, Flow_0n5cl5u_begin:any, Flow_0n5cl5u_finish:any, Flow_1os3poj_begin:any, Flow_1os3poj_finish:any, Flow_07jb1wz_begin:any, Flow_07jb1wz_finish:any, Flow_0jo1ts2_begin:any, Flow_0jo1ts2_finish:any, Flow_0p066qq_begin:any, Flow_0p066qq_finish:any, Flow_0hi86xu_begin:any, Flow_0hi86xu_finish:any, Flow_0s8akvo_begin:any, Flow_0s8akvo_finish:any, Flow_16ekjt0_begin:any, Flow_16ekjt0_finish:any, Flow_1uairna_begin:any, Flow_1uairna_finish:any, MoveOn:any  in
par MoveOn, Flow_0l7vqr5_begin, Flow_0l7vqr5_finish, Flow_0260g19_begin, Flow_0260g19_finish, Flow_1hsfrxd_begin, Flow_1hsfrxd_finish, Flow_1gg6kme_begin, Flow_1gg6kme_finish, Flow_0g18kjw_begin, Flow_0g18kjw_finish, Flow_0ex5np0_begin, Flow_0ex5np0_finish, Flow_0aeyc3e_begin, Flow_0aeyc3e_finish, Flow_1lpe857_begin, Flow_1lpe857_finish, Flow_1n4p5ca_begin, Flow_1n4p5ca_finish, Flow_14exuww_begin, Flow_14exuww_finish, Flow_0n5cl5u_begin, Flow_0n5cl5u_finish, Flow_1os3poj_begin, Flow_1os3poj_finish, Flow_07jb1wz_begin, Flow_07jb1wz_finish, Flow_0jo1ts2_begin, Flow_0jo1ts2_finish, Flow_0p066qq_begin, Flow_0p066qq_finish, Flow_0hi86xu_begin, Flow_0hi86xu_finish, Flow_0s8akvo_begin, Flow_0s8akvo_finish, Flow_16ekjt0_begin, Flow_16ekjt0_finish, Flow_1uairna_begin, Flow_1uairna_finish in
  (* we first generate the scheduler, necessary for keeping track of tokens, and triggering inclusive merge gateways *)
    scheduler [...](nil, p1(), nil, nil, nil) 
||
par    (* synchronizations on all begin/finish flow messages *)
Flow_0l7vqr5_begin, Flow_0l7vqr5_finish, Flow_0260g19_begin, Flow_0260g19_finish, Flow_1hsfrxd_begin, Flow_1hsfrxd_finish, Flow_1gg6kme_begin, Flow_1gg6kme_finish, Flow_0g18kjw_begin, Flow_0g18kjw_finish, Flow_0ex5np0_begin, Flow_0ex5np0_finish, Flow_0aeyc3e_begin, Flow_0aeyc3e_finish, Flow_1lpe857_begin, Flow_1lpe857_finish, Flow_1n4p5ca_begin, Flow_1n4p5ca_finish, Flow_14exuww_begin, Flow_14exuww_finish, Flow_0n5cl5u_begin, Flow_0n5cl5u_finish, Flow_1os3poj_begin, Flow_1os3poj_finish, Flow_07jb1wz_begin, Flow_07jb1wz_finish, Flow_0jo1ts2_begin, Flow_0jo1ts2_finish, Flow_0p066qq_begin, Flow_0p066qq_finish, Flow_0hi86xu_begin, Flow_0hi86xu_finish, Flow_0s8akvo_begin, Flow_0s8akvo_finish, Flow_16ekjt0_begin, Flow_16ekjt0_finish, Flow_1uairna_begin, Flow_1uairna_finish in
 par    (* we then generate interleaving of all flow processes *)
flow [Flow_0l7vqr5_begin, Flow_0l7vqr5_finish] (Flow_0l7vqr5) || flow [Flow_0260g19_begin, Flow_0260g19_finish] (Flow_0260g19) || flow [Flow_1hsfrxd_begin, Flow_1hsfrxd_finish] (Flow_1hsfrxd) || flow [Flow_1gg6kme_begin, Flow_1gg6kme_finish] (Flow_1gg6kme) || flow [Flow_0g18kjw_begin, Flow_0g18kjw_finish] (Flow_0g18kjw) || flow [Flow_0ex5np0_begin, Flow_0ex5np0_finish] (Flow_0ex5np0) || flow [Flow_0aeyc3e_begin, Flow_0aeyc3e_finish] (Flow_0aeyc3e) || flow [Flow_1lpe857_begin, Flow_1lpe857_finish] (Flow_1lpe857) || flow [Flow_1n4p5ca_begin, Flow_1n4p5ca_finish] (Flow_1n4p5ca) || flow [Flow_14exuww_begin, Flow_14exuww_finish] (Flow_14exuww) || flow [Flow_0n5cl5u_begin, Flow_0n5cl5u_finish] (Flow_0n5cl5u) || flow [Flow_1os3poj_begin, Flow_1os3poj_finish] (Flow_1os3poj) || flow [Flow_07jb1wz_begin, Flow_07jb1wz_finish] (Flow_07jb1wz) || flow [Flow_0jo1ts2_begin, Flow_0jo1ts2_finish] (Flow_0jo1ts2) || flow [Flow_0p066qq_begin, Flow_0p066qq_finish] (Flow_0p066qq) || flow [Flow_0hi86xu_begin, Flow_0hi86xu_finish] (Flow_0hi86xu) || flow [Flow_0s8akvo_begin, Flow_0s8akvo_finish] (Flow_0s8akvo) || flow [Flow_16ekjt0_begin, Flow_16ekjt0_finish] (Flow_16ekjt0) || flow [Flow_1uairna_begin, Flow_1uairna_finish] (Flow_1uairna)
 end par 

||
 par    (* we finally generate interleaving of all node processes *)
init [begin,Flow_0l7vqr5_begin] || final [Flow_1uairna_finish, finish] ||  task_1_1 [Flow_0l7vqr5_finish,Activity_1kwh79w,Flow_0260g19_begin]  || xorjoin_Gateway_0hcn4ks[Flow_0260g19_finish,Flow_0ex5np0_finish,Flow_1hsfrxd_begin] ||  task_1_1 [Flow_1hsfrxd_finish,Activity_0zada8u,Flow_1gg6kme_begin]  ||  task_1_1 [Flow_1gg6kme_finish,Activity_1k1z0h2,Flow_0g18kjw_begin]  || xorsplit_Gateway_0dwla2i[Flow_0g18kjw_finish,Flow_0ex5np0_begin,Flow_0aeyc3e_begin] ||  task_1_1 [Flow_0aeyc3e_finish,Activity_1ihs2pn,Flow_1lpe857_begin]  || xorsplit_Gateway_1has10j[Flow_1lpe857_finish,Flow_1n4p5ca_begin,Flow_14exuww_begin] ||  task_1_1 [Flow_1n4p5ca_finish,Activity_1nznv0p,Flow_16ekjt0_begin]  ||  task_1_1 [Flow_14exuww_finish,Activity_1yint2p,Flow_0n5cl5u_begin]  || andsplit_Gateway_07mdljq[Flow_0n5cl5u_finish,Flow_1os3poj_begin,Flow_07jb1wz_begin] ||  task_1_1 [Flow_1os3poj_finish,Activity_0qskknw,Flow_0jo1ts2_begin]  ||  task_1_1 [Flow_07jb1wz_finish,Activity_09wb4yp,Flow_0p066qq_begin]  || andjoin_Gateway_1kcljo2[Flow_0jo1ts2_finish,Flow_0p066qq_finish,Flow_0hi86xu_begin] ||  task_1_1 [Flow_0hi86xu_finish,Activity_1u1z1yw,Flow_0s8akvo_begin]  || xorjoin_Gateway_1hvgstf[Flow_0s8akvo_finish,Flow_16ekjt0_finish,Flow_1uairna_begin]
 end par 
 end par
 end par
 end hide

end process


end module
