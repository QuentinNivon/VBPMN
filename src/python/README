##### How to compare two PIF files #####

There are two scripts: compare.py and checkprop.py.


$ python compare.py operation file1.pif file2.pif [options]

This command converts each PIF file into an LTS (internal behavior
removed), and compares them wrt. the given operation (strong
equivalence/preorder). Options can be used for hiding/renaming
purposes.

There are 3 available operations:

   conservative: both LTSs are equivalent

   inclusive: the second LTS simulates the first LTS

   exclusive: the first LTS simulates the second LTS

There are different options:

   -h file, --hide file: performs the comparison up-to-alphabet hiding all alphabet elements in file

   -e file, --expose file: performs the comparison up-to-alphabet hiding all alphabet elements but for those in file

   -r file, --rename file: performs the comparison after renaming using couples in file

   -c file, --context file: performs the comparison after (synchronous) composition with a context in file (LTS in BCG format)

Examples (from FASE'16)

compare.py conservative model1.pif model2.pif

compare.py inclusive model1.pif model2.pif

compare.py exclusive model2.pif model1.pif

compare.py conservative model1.pif model2.pif --expose "a, b"

compare.py conservative model1.pif model2.pif --hide "log"

$ python checkprop.py file1.pif file2.pif file.mcl

This command converts each PIF file into an LTS (internal behavior
removed), and checks that both process LTSs respect the property
specified in file.mcl. 

